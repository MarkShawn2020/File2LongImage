############################################################
# File2LongImage .gitignore
# 自动生成的文件转长图工具忽略规则
############################################################

# ==================== Python ====================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# For a library or package, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
# According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# However, in case of collaboration, if having platform-specific dependencies or dependencies
# having no cross-platform support, pipenv may install dependencies that don't work, or not
# install all needed dependencies.
#Pipfile.lock

# poetry
# Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
# This is especially recommended for binary packages to ensure reproducibility, and is more
# commonly ignored for libraries.
#poetry.lock

# pdm
# Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
# pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
# in version control.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
venv_*/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==================== macOS ====================
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# ==================== 项目特定 ====================
# 输出目录
output/
outputs/
converted/
results/

# 中间文件目录
.intermediate/
intermediate/
temp/
tmp/
cache/

# 日志文件
logs/
*.log
error_*.json
error_*.log

# 应用打包产物
*.app
!assets/*.icns
*.dmg
*.pkg
*.zip
*.tar.gz

# 测试文件
test_*.py
!test_enhanced_error.py
!test_error_handling.py
!test_error_log_demo.py
!test_special_chars.py
!test_ui_improvements.py
solutions/

# IDE 配置
.vscode/
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/
*.sublime-project
*.sublime-workspace

# 备份文件
*.bak
*.backup
*.old
*.orig
*.tmp

# 密钥和凭证（永远不要提交）
*.pem
*.key
*.p12
*.p8
*.cer
*.crt
*.pfx
credentials.json
secrets.json
.env.local
.env.*.local

# 性能分析
*.prof
*.lprof
.prof/

# 系统特定
Thumbs.db
ehthumbs.db
Desktop.ini

# Node.js（如果使用 Electron）
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.npm
.yarn

# 文档构建
docs/build/
_build/
site/

# 配置覆盖（保留示例配置）
config.local.py
config.override.py

# 数据文件（如果太大）
*.pdf
!assets/*.pdf
*.docx
*.xlsx
*.pptx
# 如果需要保留测试数据，请创建 test_data/ 目录并在此处排除

# 杂项
.history/
.vscode-server/
*.pid
*.seed
*.pid.lock

# 保留的文件（使用 ! 前缀表示不忽略）
!.gitignore
!.gitattributes
!requirements.txt
!README.md
!LICENSE
!CONTRIBUTING.md